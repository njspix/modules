nextflow_process {

    name "Test Process BISCUIT_ALIGN"
    script "../main.nf"
    process "BISCUIT_ALIGN"

    tag "modules"
    tag "modules_nfcore"
    tag "biscuit"
    tag "biscuit/align"
    tag "biscuit/index"

    test("sarscov2 - [bam, bai] - BiscuitIndex | single end") {
        setup {
            run("BISCUIT_INDEX") {
                script "../../index/main.nf"
                process {
                    """
                    input[0] = file(params.test_data['sarscov2']['genome']['genome_fasta'], checkIfExists: true)
                    """
                }
            }
        }

        when {
            params {
                outdir = "$outputDir"
            }
            process {
                """
                input[0] = [
                            [ id:'test', single_end:true ],
                            file(params.test_data['sarscov2']['illumina']['test_methylated_1_fastq_gz'], checkIfExists: true)
                           ]
                input[1] = BISCUIT_INDEX.out.index
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

    }

    test("sarscov2 - [bam, bai] - BiscuitIndex | paired end") {
        setup {
            run("BISCUIT_INDEX") {
                script "../../index/main.nf"
                process {
                    """
                    input[0] = file(params.test_data['sarscov2']['genome']['genome_fasta'], checkIfExists: true)
                    """
                }
            }
        }

        when {
            params {
                outdir = "$outputDir"
            }
            process {
                """
                input[0] = [
                            [ id:'test', single_end:true ],
                            file(params.test_data['sarscov2']['illumina']['test_methylated_1_fastq_gz'], checkIfExists: true),
                            file(params.test_data['sarscov2']['illumina']['test_methylated_2_fastq_gz'], checkIfExists: true)
                           ]
                input[1] = BISCUIT_INDEX.out.index
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

    }
}
